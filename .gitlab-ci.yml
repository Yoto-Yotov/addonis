image: java:8-jdk

stages:
  - build
  # sonar
  - test
  - deploy

variables:
  GRADLE_USER_HOME: "cache/.gradle"
  GRADLE_ARGS_CI: "--no-daemon --stacktrace"
  K8S_SECRET_SONAR_TOKEN: 51157eb70423e44bd55267de73ea46c03bf0d213
  GIT_DEPTH: 0
  K8S_SECRET_SONAR_HOST_URL: "http://localhost:9000"

cache:
  paths:
    - $GRADLE_USER_HOME/wrapper/
    - $GRADLE_USER_HOME/caches/

before_script:
  - chmod +x ./gradlew

build:
  stage: build
  allow_failure: false
  script:
    - ./gradlew $GRADLE_ARGS_CI -g $GRADLE_USER_HOME bootJar
  artifacts:
    paths:
      - build/libs/application.jar
  only:
    - master
    - merge_requests

sonarqube-check:
  stage: test
  script: gradle sonarqube -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - merge_requests
    - master

test:
  stage: test
  allow_failure: false
  script:
    - ./gradlew test
  artifacts:
    reports:
      junit: build/test-results/tests/**/TEST-*.xml
  dependencies:
    - build

deploy:
  image: python:latest
  stage: deploy
  script:
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region eu-west-3
    - aws s3 cp build/libs/application.jar s3://elasticbeanstalk-eu-west-3-634222083792/application-$CI_PIPELINE_ID.jar
    - aws elasticbeanstalk create-application-version --application-name addonis --version-label addonis-$CI_PIPELINE_ID --source-bundle S3Bucket=elasticbeanstalk-eu-west-3-634222083792,S3Key=application-$CI_PIPELINE_ID.jar
    - aws elasticbeanstalk update-environment --application-name addonis --environment-name Addonis-env --version-label addonis-$CI_PIPELINE_ID
  dependencies:
    - test